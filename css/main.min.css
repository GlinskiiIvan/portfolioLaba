@-webkit-keyframes hideWork{to{opacity:0;height:0;width:0;padding:0;margin:0;border:0}}@keyframes hideWork{to{opacity:0;height:0;width:0;padding:0;margin:0;border:0}}@font-face{font-family:"icons";src:url(../fonts/icons/icons.eot?fslj4b);src:url(../fonts/icons/icons.eot?fslj4b#iefix) format("embedded-opentype"),url(../fonts/icons/icons.ttf?fslj4b) format("truetype"),url(../fonts/icons/icons.woff?fslj4b) format("woff"),url(../fonts/icons/icons.svg?fslj4b#icons) format("svg");font-weight:400;font-style:normal;font-display:block}[class*=" icon-"],[class^=icon-]{font-family:"icons"!important;speak:never;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-email:before{content:"\e945"}.icon-location:before{content:"\e947"}.icon-mobile:before{content:"\e959"}.icon-cogs:before{content:"\e995"}.icon-arrow-up:before{content:"\ea3a"}.icon-whatsapp:before{content:"\ea93"}.icon-telegram:before{content:"\ea95"}.icon-vk:before{content:"\ea98"}.icon-html:before{content:"\eae5"}.container{width:100%;height:100%;max-width:1270px;margin:0 auto;padding:0 15px}.gradient-font,.toUp{background:linear-gradient(41deg,#a21af0 29%,#ff0072 70%)}.gradient-font{background:-o-linear-gradient(49deg,#a21af0 29%,#ff0072 70%);color:#dbdbdb;-webkit-background-clip:text;-webkit-text-fill-color:transparent}*{-webkit-box-sizing:border-box;box-sizing:border-box;margin:0;padding:0}li{list-style:none}a{text-decoration:none}body._lock{overflow:hidden}.toUp{position:fixed;width:50px;height:50px;bottom:20px;right:20px;border:2px solid #15263e;border-radius:50%;color:#fff;font-size:30px;-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.toUp._active{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.toUp:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1);border-radius:20px}.toUp:active{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}.toUp::before{top:50%;left:50%;position:absolute;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.banner{background:url(../img/header_bg.png) no-repeat no-repeat center center/cover;text-align:center;padding:90px 0;height:100vh}.banner__title{font-weight:400;text-transform:uppercase;color:#fff;margin-bottom:65px}.banner__btn,.banner__title,.banner__title--span,.contacus{font-family:Arial,Helvetica,sans-serif;letter-spacing:.075em}.banner__title--span{font-weight:700;text-transform:uppercase}.banner__btn,.contacus{color:#fff}.banner__btn{font-weight:400;text-transform:uppercase;padding:1.4em;background:-o-linear-gradient(49deg,#a21af0 29%,#ff0072 70%);background:linear-gradient(41deg,#a21af0 29%,#ff0072 70%);border:0;cursor:pointer;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.banner__btn:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1);border-radius:20px}.banner__btn:active{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}.contacus{background:url(../img/contacus_bg.png);background-position:center center;background-repeat:no-repeat no-repeat;background-size:cover;padding:90px 0;text-align:center}.contacus .container{padding:0 5px}.contacus__title{font-weight:700;text-transform:uppercase;margin-bottom:20px}.contacus__subtitle{font-weight:400;margin-bottom:75px}.contacus__form{margin-bottom:30px}.contacus__btn{background:linear-gradient(41deg,#a21af0 29%,#ff0072 70%);font-family:Arial,Helvetica,sans-serif;font-weight:400;text-transform:uppercase;letter-spacing:.075em;color:#fff;padding:1.4em;border:0;cursor:pointer;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.contacus__btn:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1);border-radius:20px}.contacus__btn:active{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}.contacus-wrapper{background:#15263e;padding:80px 0}.form__data--item{font:400 18px Arial,Helvetica,sans-serif;letter-spacing:.075em;color:#494949;padding:10px 0 10px 10px;margin-bottom:10px;border:0;outline:0}.form__message{width:80%;max-width:80%;min-height:110px;border:0;outline:0}.education{background:linear-gradient(41deg,#a21af0 29%,#ff0072 70%);font-family:Arial,Helvetica,sans-serif;color:#fff;letter-spacing:.075em;padding:90px 0 40px}.education__title{font-weight:700;text-transform:uppercase;margin-bottom:20px}.education__subtitle{font-weight:400;text-align:center;margin-bottom:60px}.education__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around;margin:50px 0}.education__item:nth-child(odd) .education__item--info{text-align:right}.education__item:nth-child(odd) .education__item--info::before{right:-50%}.education__item:nth-child(even) .education__item--info,.education__item:nth-child(odd) .education__item--desc{text-align:left}.education__item:nth-child(even){-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse}.education__item:nth-child(even) .education__item--info::before{left:-35%}.education__item:nth-child(even) .education__item--desc{text-align:right}.education__item--info{position:relative;font-size:22px}.education__item--info::before{background:#fff;position:absolute;content:"";display:block;width:10px;height:100%}.education__item--desc{width:70%}.education-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}footer{padding:45px 0}.footer-wrapper{font:400 16px "Times New Roman";letter-spacing:.075em;color:#494949;text-align:center}.footer-social{margin-bottom:15px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.footer-icon{font-size:24px;margin:0 10px;background:-o-linear-gradient(49deg,#a21af0 29%,#ff0072 70%);background:linear-gradient(41deg,#a21af0 29%,#ff0072 70%);color:#fff;width:50px;height:50px;display:block;border-radius:50%;position:relative;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.footer-icon:hover,.services__item div:hover{-webkit-transform:scale(1.2) rotate(360deg);-ms-transform:scale(1.2) rotate(360deg);transform:scale(1.2) rotate(360deg)}.footer-icon:active{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}.footer-icon::before{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.header{background:#15263e;-webkit-transform:all .3s ease;-ms-transform:all .3s ease;transform:all .3s ease}.header.fixed{background:#15263e;position:fixed;width:100%;top:0;left:0;z-index:10;height:auto}.menu-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.navbar{padding:25px;width:95%}.navbar__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.navbar__item{position:relative}.hosts table caption,.navbar__item--link{text-transform:uppercase;letter-spacing:.075em}.navbar__item--link{font:400 18px Arial,Helvetica,sans-serif;color:#fff}.hosts table th a::after,.hosts table th a::before,.navbar__item--link::after,.navbar__item--link::before{position:absolute;content:"";width:0%;height:3px;background:-o-linear-gradient(49deg,#a21af0 29%,#ff0072 70%);background:linear-gradient(41deg,#a21af0 29%,#ff0072 70%);left:0;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.navbar__item--link::before{bottom:-10px}.navbar__item--link::after{top:-10px}.hosts table th a:hover::after,.hosts table th a:hover::before,.navbar__item--link:hover::after,.navbar__item--link:hover::before,.socials__info--link:hover::before{width:100%}.menu-icon{display:none}.hosts{background:#dcdcde}.hosts table{background:#fff;border:15px solid #fff;border-radius:20px;border-spacing:5px;border-collapse:separate;text-align:center}.hosts table caption{font-family:Arial,Helvetica,sans-serif;font-weight:700;color:#15263e;margin-bottom:40px}.hosts table td,.hosts table th{border-radius:6px;padding:5px 10px}.hosts table th{background:#15263e;color:#fff}.hosts table th a{color:#fff;position:relative}.hosts table th a::before{bottom:-2px}.hosts table th a::after{top:-2px}.hosts table td{background:#dcdcde}.hosts,.portfolio{padding:90px 0}.portfolio__container .filter li,.portfolio__title{font-family:Arial,Helvetica,sans-serif;font-weight:700;text-transform:uppercase;letter-spacing:.075em}.portfolio__title{text-align:center;color:#15263e;margin-bottom:40px}.portfolio__container,.portfolio__container .works{display:-webkit-box;display:-ms-flexbox;display:flex}.portfolio__container .filter li{margin:40px 0}.portfolio__container .filter li.active,.portfolio__container .filter li:hover,.portfolio__container .works__item a:hover{color:#a21af0}.portfolio__container .works{width:100%;max-width:100%;-ms-flex-wrap:wrap;flex-wrap:wrap}.portfolio__container .works__item{text-align:center;width:calc(33.3333333333% - 30px);margin:15px}.portfolio__container .works__item img{max-width:100%;height:180px;margin-bottom:10px}.portfolio__container .filter li,.portfolio__container .works__item a{color:#15263e;cursor:pointer;-webkit-transition:all .2s ease;-o-transition:all .2s ease;transition:all .2s ease}.portfolio__container .works__item a img{-webkit-transition:all .4s ease;-o-transition:all .4s ease;transition:all .4s ease}.portfolio__container .works__item a img:hover{-webkit-transform:scale(1.08);-ms-transform:scale(1.08);transform:scale(1.08)}.hide{opacity:1;-webkit-animation-name:hideWork;animation-name:hideWork;-webkit-animation-duration:1.5s;animation-duration:1.5s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.portfolio__container .works__item a,.services{font-family:Arial,Helvetica,sans-serif;letter-spacing:.075em}.services{padding:90px 0 10px}.services__title{font-weight:700;text-transform:uppercase;color:#15263e;margin-bottom:15px}.services__subtitle{font-weight:400;color:#494949}.services__container,.services__item,.services__item div{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.services__container{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;margin-top:73px}.services__item,.services__item div{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.services__item{width:33.3333333333%;padding:0 35px;margin-bottom:80px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.services__item div{background:-o-linear-gradient(49deg,#a21af0 29%,#ff0072 70%);background:linear-gradient(41deg,#a21af0 29%,#ff0072 70%);width:100px;height:100px;border-radius:50%;margin-bottom:30px;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.services__item div img{width:45px;height:45px}.services__item--text,.services__item--title{font-family:Arial,Helvetica,sans-serif;letter-spacing:.075em}.services__item--title{font-weight:700;text-transform:uppercase;color:#15263e;margin-bottom:30px}.services__item--text{font-weight:400;color:#494949}.services-wrapper{text-align:center}.socials{background:#dcdcde;padding:90px 0}.socials__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:33%}.socials__icon{font-size:25px;color:#fff;background:#15263e;width:60px;height:60px;border-radius:50%;position:relative;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.socials__icon:hover{-webkit-transform:scale(1.2) rotate(360deg);-ms-transform:scale(1.2) rotate(360deg);transform:scale(1.2) rotate(360deg)}.socials__icon::before{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.socials__info{text-align:left;max-width:350px;padding-left:20px}.socials__info--title{font:700 22px Arial,Helvetica,sans-serif;text-transform:uppercase;letter-spacing:.075em;color:#15263e;margin-bottom:20px}.socials__info--text{font:400 18px Arial,Helvetica,sans-serif;letter-spacing:.075em;color:#494949}.socials__info--link{-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease;position:relative}.socials__info--link::before{background:linear-gradient(41deg,#a21af0 29%,#ff0072 70%);position:absolute;content:"";display:block;width:0%;height:3px;bottom:-10px}.socials-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.whoAmI{background:url(../img/my_photo.png) no-repeat no-repeat center center/contain;padding:90px 0}.about-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.whoAmI__item{width:33.3333333333%}.about__subtitle,.about__title{text-transform:uppercase;letter-spacing:.075em}.about__title{font-family:Arial,Helvetica,sans-serif;font-weight:400;color:#15263e}.about__subtitle{font:400 20px Arial,Helvetica,sans-serif;color:#a21af0;margin-bottom:30px}.about__desc{font:400 15px Arial,Helvetica,sans-serif;letter-spacing:.075em;color:#494949}.skils__item,.skils__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.skils__item{font:700 18px Arial,Helvetica,sans-serif;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-transform:uppercase;letter-spacing:.075em;color:#494949;padding:15px 0}.skil-progress{margin-top:10px;width:90%}progress.skil-progress{display:block;border-radius:20px;width:80%;height:15px}progress.skil-progress::-webkit-progress-bar{background:#ff0072;border-radius:20px}progress.skil-progress::-webkit-progress-value{background:#a21af0;border-radius:20px}progress.skil-progress::-moz-progress-bar{background:#a21af0;border-radius:20px}@supports (-webkit-appearance:none){.banner{background-image:url(../img/header_bg.webp)}.contacus{background:url(../img/contacus_bg.webp)}.whoAmI{background-image:url(../img/my_photo.webp)}}@media (min-width:767px){.banner__title{font-size:calc(24px + 23*(100vw/1270))}.banner__title--span{font-size:calc(45px + 105*(100vw/1270))}.banner__btn{font-size:calc(14px + 4*(100vw/1270))}.contacus__title{font-size:calc(36px + 14*(100vw/1270))}.contacus__subtitle{font-size:calc(16px + 2*(100vw/1270))}.contacus__btn{font-size:calc(14px + 4*(100vw/1270))}.education__title,.hosts table caption{font-size:calc(36px + 14*(100vw/1270))}.education__subtitle,.hosts table td,.portfolio__container .works__item a{font-size:calc(16px + 2*(100vw/1270))}.education__item--desc{font-size:calc(14px + 2*(100vw/1270))}.hosts table th{font-size:calc(18px + 2*(100vw/1270))}.portfolio__title,.services__title{font-size:calc(36px + 14*(100vw/1270))}.portfolio__container .filter li{font-size:calc(16px + 4*(100vw/1270))}.services__subtitle{font-size:calc(16px + 2*(100vw/1270))}.services__item--title{font-size:calc(22px + 3*(100vw/1270))}.services__item--text{font-size:calc(14px + 2*(100vw/1270))}.about__title{font-size:calc(36px + 14*(100vw/1270))}}@media (max-width:1200px){.container{padding:0 30px}.socials__item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.socials__icon{margin-bottom:20px}.socials__info{text-align:center;padding:0}.whoAmI{padding:90px 0 40px;background-image:none}.about-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.whoAmI__item{width:70%;margin-bottom:50px}}@media (max-width:1000px){.education__item:nth-child(odd) .education__item--info::before{right:-20%}.education__item:nth-child(even) .education__item--info::before{left:-20%}.services__container{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.services__item{width:40%}}@media (max-width:800px){.education__item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.education__item:nth-child(even),.education__item:nth-child(odd){-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.education__item--info{margin-bottom:20px}.navbar__list{position:fixed;left:-100%;top:0;background:rgba(21,38,62,.8);width:100%;height:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:50px;-webkit-transition:left .3s ease;-o-transition:left .3s ease;transition:left .3s ease}.navbar__list._active{left:0}.navbar__item{padding:15px 0}.navbar__item--link{font-size:24px}.navbar__item--link::before{bottom:0}.navbar__item--link::after{top:0}.menu-icon{position:relative;display:block;width:30px;height:18px;cursor:pointer;z-index:5}.menu-icon:active{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}.menu-icon span,.menu-icon::after,.menu-icon::before{position:absolute;left:0;width:100%;height:10%;background-color:#fff;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.menu-icon::after,.menu-icon::before{content:""}.hosts table th a::before,.menu-icon::after{bottom:0}.menu-icon span{top:50%;-webkit-transform:translate(1,-50%);-ms-transform:translate(1,-50%);transform:translate(1,-50%)}.hosts table th a::after,.menu-icon::before{top:0}.menu-icon._active::after{bottom:50%;-webkit-transform:rotate(45deg) translate(0,50%);-ms-transform:rotate(45deg) translate(0,50%);transform:rotate(45deg) translate(0,50%)}.menu-icon._active span{top:50%;-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0)}.menu-icon._active::before{top:50%;-webkit-transform:rotate(-45deg) translate(0,-50%);-ms-transform:rotate(-45deg) translate(0,-50%);transform:rotate(-45deg) translate(0,-50%)}.services__item{width:90%}.socials{padding:90px 0 40px}.socials__item{margin-bottom:50px;width:80%}.socials-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.whoAmI__item{width:100%}}@media (max-width:767px){.banner__title{font-size:calc(24px + 39.1*((100vw - 320px)/1270))}.banner__title--span{font-size:calc(45px + 178.5*((100vw - 320px)/1270))}.banner__btn{font-size:calc(14px + 6.8*((100vw - 320px)/1270))}.contacus__title{font-size:calc(36px + 23.8*((100vw - 320px)/1270))}.contacus__subtitle{font-size:calc(16px + 3.4*((100vw - 320px)/1270))}.contacus__btn{font-size:calc(14px + 6.8*((100vw - 320px)/1270))}.education__title,.hosts table caption{font-size:calc(36px + 23.8*((100vw - 320px)/1270))}.education__subtitle,.hosts table td,.portfolio__container .works__item a{font-size:calc(16px + 3.4*((100vw - 320px)/1270))}.education__item--desc{font-size:calc(14px + 3.4*((100vw - 320px)/1270))}.hosts table th{font-size:calc(18px + 3.4*((100vw - 320px)/1270))}.portfolio__title,.services__title{font-size:calc(36px + 23.8*((100vw - 320px)/1270))}.portfolio__container .filter li{font-size:calc(16px + 6.8*((100vw - 320px)/1270))}.services__subtitle{font-size:calc(16px + 3.4*((100vw - 320px)/1270))}.services__item--title{font-size:calc(22px + 5.1*((100vw - 320px)/1270))}.services__item--text{font-size:calc(14px + 3.4*((100vw - 320px)/1270))}.about__title{font-size:calc(36px + 23.8*((100vw - 320px)/1270))}}@media (max-width:425px){.education__item--desc{width:100%}.footer-icon{font-size:16px;width:30px;height:30px}.services__item{width:100%}}@media (prefers-reduced-motion:no-preference){:root{scroll-behavior:smooth}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */